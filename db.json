{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/about/me/avatar.jpg","path":"about/me/avatar.jpg","modified":1,"renderable":0},{"_id":"themes/hingle/source/static/hingle.css","path":"static/hingle.css","modified":1,"renderable":1},{"_id":"themes/hingle/source/static/hingle.js","path":"static/hingle.js","modified":1,"renderable":1},{"_id":"themes/hingle/source/static/kico.css","path":"static/kico.css","modified":1,"renderable":1},{"_id":"themes/hingle/source/static/kico.js","path":"static/kico.js","modified":1,"renderable":1},{"_id":"themes/hingle/source/static/img/icon.png","path":"static/img/icon.png","modified":1,"renderable":1}],"Cache":[{"_id":"source/about/me.md","hash":"f21921e4d36118ddd81c661930d66722d1b8bf2f","modified":1700537586005},{"_id":"source/_posts/Linux-Ubuntu.md","hash":"942761ffc3eb13eab945d687d554fd5e8daf18c4","modified":1700553776358},{"_id":"source/about/me/avatar.jpg","hash":"1af762d4a0623ffa0bbbce7ff95ed7e7de77e4a5","modified":1700551061409},{"_id":"themes/hingle/.gitignore","hash":"1e51bee1ec3527ff3e2d6818a5367b5d81c69038","modified":1676185819000},{"_id":"themes/hingle/README.md","hash":"71d1762328de3b6eb7c0536c2d414e8221be0742","modified":1676185819000},{"_id":"themes/hingle/LICENSE","hash":"4de1840f7346984f481500155ab438f0fdd12634","modified":1676185819000},{"_id":"themes/hingle/_config.example.yml","hash":"30d71a66ef8d1ea2ee8e531bc9289f73ce899764","modified":1676185819000},{"_id":"themes/hingle/_config.yml","hash":"4afe4f02d26589140e53d7db3ad735779cf2b22f","modified":1700554721653},{"_id":"themes/hingle/layout/index.ejs","hash":"9bcb0ddbe47e19149c6b50b0dc669955d7804caa","modified":1676185819000},{"_id":"themes/hingle/layout/archive.ejs","hash":"90eff02318b17c6eff80021d9a32c2a680415d29","modified":1676185819000},{"_id":"themes/hingle/layout/layout.ejs","hash":"6b51c9598139016d4a451cd32ca9076c3a9089d7","modified":1676185819000},{"_id":"themes/hingle/layout/_partial/archive-list.ejs","hash":"d0ff1db7c10c68230f4ee8f7052bf68aa1301f13","modified":1676185819000},{"_id":"themes/hingle/layout/page.ejs","hash":"c0cb64ef3215a041c077d91adc911b2f8380c6c1","modified":1676185819000},{"_id":"themes/hingle/layout/post.ejs","hash":"69cae3890cb41aef16b4bb80ac1b135afa6ca9e8","modified":1676185819000},{"_id":"themes/hingle/layout/_partial/head.ejs","hash":"3e83286f7fdb7c321e17147b11f9cb04dc4f68f9","modified":1676185819000},{"_id":"themes/hingle/layout/_partial/footer.ejs","hash":"a8c3df304817e18fa91f12654cdab6e088021469","modified":1676185819000},{"_id":"themes/hingle/layout/_partial/header.ejs","hash":"2f13227159607016a577345c974c80fe397666e5","modified":1676185819000},{"_id":"themes/hingle/layout/_partial/social.ejs","hash":"dc4e3e915327d500b5ad125c0f4847fffb37d47e","modified":1676185819000},{"_id":"themes/hingle/source/static/hingle.css","hash":"3f56286deb19d6437edb1fb5d4783e7c63242c01","modified":1700533954468},{"_id":"themes/hingle/source/static/hingle.js","hash":"cb7c49db65b063d89bca03eee3e2e79af2ada0c1","modified":1700556074544},{"_id":"themes/hingle/source/static/kico.css","hash":"1ca26164d042dac74326c73255cb84139d6164b9","modified":1700481875549},{"_id":"themes/hingle/source/static/kico.js","hash":"353d3ece9b5020bdac573c35fece1455e72b40ee","modified":1676185819000},{"_id":"themes/hingle/source/static/img/icon.png","hash":"1af762d4a0623ffa0bbbce7ff95ed7e7de77e4a5","modified":1700551061409},{"_id":"public/about/me.html","hash":"c0c1fe1143aafd56c8ac490758521a6787aa3ae3","modified":1700556305747},{"_id":"public/archives/index.html","hash":"fd87f4ac6a7640b647aced1d7946f4244f76f7e8","modified":1700556305747},{"_id":"public/archives/2023/index.html","hash":"5de9c866d47bb63aeea6b984aa50749abc7b81c8","modified":1700556305747},{"_id":"public/archives/2023/11/index.html","hash":"1df898b0e33e47c546abb911aa770415e2cf23eb","modified":1700556305747},{"_id":"public/index.html","hash":"96b30acc6c1d67a8c155fd4f80f4b343853b578e","modified":1700556305747},{"_id":"public/categories/基础知识/index.html","hash":"c6fd617cc3e06b7ddfe295012c569f02b39fb667","modified":1700556305747},{"_id":"public/2023/11/20/Linux-Ubuntu/index.html","hash":"46f36e3e7fa9b44bb2a8ec6e2f5568dc1b849a1b","modified":1700556305747},{"_id":"public/tags/Linux/index.html","hash":"54741b475aaf5713804739fb903f277be0f5d3b1","modified":1700556305747},{"_id":"public/static/hingle.js","hash":"cb7c49db65b063d89bca03eee3e2e79af2ada0c1","modified":1700556305747},{"_id":"public/static/kico.js","hash":"353d3ece9b5020bdac573c35fece1455e72b40ee","modified":1700556305747},{"_id":"public/static/hingle.css","hash":"3f56286deb19d6437edb1fb5d4783e7c63242c01","modified":1700556305747},{"_id":"public/static/kico.css","hash":"1ca26164d042dac74326c73255cb84139d6164b9","modified":1700556305747},{"_id":"public/static/img/icon.png","hash":"1af762d4a0623ffa0bbbce7ff95ed7e7de77e4a5","modified":1700556305747},{"_id":"public/about/me/avatar.jpg","hash":"1af762d4a0623ffa0bbbce7ff95ed7e7de77e4a5","modified":1700556305747}],"Category":[{"name":"基础知识","_id":"clp83bfpj0002qcv43vdxejm4"}],"Data":[],"Page":[{"title":"关于我","date":"2023-11-21T03:09:37.000Z","_content":"\n我的个人简介\n\n![](about/me/avatar.jpg)\n\n\n\n\n\n","source":"about/me.md","raw":"---\ntitle: 关于我\ndate: 2023-11-21 11:09:37\n---\n\n我的个人简介\n\n![](about/me/avatar.jpg)\n\n\n\n\n\n","updated":"2023-11-21T03:33:06.005Z","path":"about/me.html","comments":1,"layout":"page","_id":"clp83bfpd0000qcv493oagg8v","content":"<p>我的个人简介</p>\n<p><img src=\"/drmmsu/about/me/avatar.jpg\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>我的个人简介</p>\n<p><img src=\"/drmmsu/about/me/avatar.jpg\"></p>\n"}],"Post":[{"title":"Ubuntu","date":"2023-11-20T14:51:01.295Z","description":"描述","comments":1,"_content":"\n> hhhh\n\n\n查看系统版本\n\n```\ncat /etc/issue\n```\n\n****\n\n## 1. 安装Ubuntu：\n\n[https://blog.csdn.net/qq_38189484/article/details/105237757](https://blog.csdn.net/qq_38189484/article/details/105237757)\n\n[https://blog.csdn.net/qq_41349068/article/details/115456013](https://blog.csdn.net/qq_41349068/article/details/115456013)\n\n### 1.1  软件源\n\n[https://www.cnblogs.com/kennywjt/p/13035367.html](https://www.cnblogs.com/kennywjt/p/13035367.html)\n\nUbuntu 的软件源配置文件是?/etc/apt/sources.list。将系统自带的该文件做个备份，将该文件替换为下面内容，即可使用。\n\n1. 备份：\n\n```bash\nsudo cp /etc/apt/sources.list /etc/apt/sources.list.backup\n```\n2. 修改配置（见sources.list内容）：\n\n```bash\nsudo gedit /etc/apt/sources.list\n```\n\n3. 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释\n\n```bash\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\n```\n\n4. 更新源\n\n```bash\nsudo apt-get update\n```\n\n### 1.2  添加环境变量\n\n```bash\n# 查看环境变量\necho $PATH\n\n# ===临时设置环境变量，当前bash生效===\nexport PATH=路径:$PATH # 或 export PATH=$PATH:路径\n    \n# ===永久设置环境变量(1)===\nsudo gedit /etc/environment\n# 文件后面加\":路径\"并保存\nsource /etc/environment # 使其生效，仅在当前bash\n# 启动新bash不生效，重启系统后全局生效\n\n# ===永久设置环境变量(2)===\nvim /etc/profile\n# 添加\nexport JAVA_HOME=/usr/local/java/jdk1.8  #按自己的路径填\nexport PATH=$PATH:$JAVA_HOME/bin\n# 让配置文件生效\nsource /etc/profile\n# 查看版本\njava -version\n```\n\n### 1.3  创建用户授予sudo权限\n\n```bash\n# 在home路径下创建用户，创建文件夹test\nuseradd -d /home/test -m test\n# 设置密码\npasswd test\n# 命令行的模式换为bash，默认是sh\nusermod -s /bin/bash test\n# 把test用户添加到sudo和admin用户组里面\nusermod -a -G sudo test\nusermod -a -G adm test\n# 检查test所在用户组\ngroups test\n# 验证是否成功\nsudo su\n```\n\n## 2. 安装软件\n\n### 2.1  软件压缩包\n\n```bash\ntar zxf pycharm-community-2018.3.tar.gz       ##解压\n# xvf   .tar.bz2\n# -z或--gzip或--ungzip 通过gzip指令处理备份文件\n# -v或--verbose 显示指令执行过程。\n\ncd  pycharm-community-2018.3/bin\n./pycharm.sh                                 ##运行pycharm安装脚本\n```\n\n### 2.2  python+pip\n\n安装pip\n\n```bash\n# 安装默认pip  (9.0.1版本，对应python2.7)\napt install python-pip / python3-pip\n# 卸载默认pip\napt remove python-pip\n\n# 升级pip   (21.3.1版本，对应python3)\npython -m pip install --upgrade pip \n# 卸载升级的pip \npip uninstall pip\n\n# 修改python默认版本\n$ which python\n/usr/bin/python\n$ sudo rm /usr/bin/python\n$ python\n~bash: /usr/bin/python: No such file or directory\n$ ln -s /usr/bin/python3.6 /usr/bin/python\n$ python -V\nPython 3.6.9\n\n# 修改pip默认版本\n$ which pip3\n$ rm /usr/bin/pip\n$ ln -s /usr/local/bin/pip3 /usr/bin/pip\n```\n\npip安装库到对应python版本\n\n```bash\n# 环境变量加别名[可选]\necho \"alias py27='usr/bin/python2.7'\" >> ~/.bash_aliases && source ~/.bash_aliases\necho \"alias py36='usr/bin/python3.6'\" >> ~/.bash_aliases && source ~/.bash_aliases\n# 使用（安装到/usr/local/lib/python版本号/dist-packages下）\npy27 -m pip install 库\n```\n\npython更换版本保留以前库\n\n```bash\n# 保存\npip freeze > library.txt\n# ---安装python---\n# 重新安装\npip install -r library.txt\n```\n\n pip指定安装位置\n\n```bash\npip install xxx --target='路径'\n```\n\n### 2.3 Docker 安装\n\n[https://www.runoob.com/docker/ubuntu-docker-install.html](https://www.runoob.com/docker/ubuntu-docker-install.html)\n\n```bash\nsudo apt-get install docker-ce=5:20.10.16~3-0~ubuntu-bionic docker-ce-cli=5:20.10.16~3-0~ubuntu-bionic containerd.io\n```\n\n### 2.4 cmake安装\n\n```shell\napt install cmake\n```\n\n```bash\n# apt install wget\n# sudo apt-get install -y build-essential\n# sudo apt-get install libssl-dev  # 缺少openssl库 \nsudo wget https://cmake.org/files/v3.22/cmake-3.22.0-rc2-linux-x86_64.tar.gz\nsudo tar -zxvf cmake-3.22.0-rc2-linux-x86_64.tar.gz\ncd cmake-3.22.0-rc2-linux-x86_64/\n# 创建软链接\nsudo ln -sf /opt/cmake-3.22.0-rc2-linux-x86_64/bin/* /usr/bin/\ncmake --version\n```\n\n### 2.5 安装库和C++\n\n```bash\napt install build-essential\napt install gdb # 调试\nwhich gcc \n# 安装uuid\napt install uuid-dev\n# 安装gtest\ngit clone https://github.com/google/googletest.git\ncd googletest\nmkdir build && cd build && cmake .. && make -j4\nsudo make install\nsudo ldconfig\n```\n\n### 2.6 安装Clangd\n\n```shell\napt-get install clangd\nsudo apt-get install clangd-12  # clangd-9\n```\n\n使用`cmd+shift+p`输入`clangd: download`\n\n下载最新的clangd（Download language server） ，然后重启就可以使用了\n\n### 2.7 java安装\n\n```bash\nsudo apt install default-jre\njava -version\nsudo apt install default-jdk\njavac -version\n```\n\n### 2.8 Redis 安装\n\nRemote Dictionary Server，高性能key-value数据库\n\n```bash\napt-get install redis\n# 启动服务\nsystemctl start redis\n# 查看服务\nps -ef|grep 6379\n# 查看服务状态\nsystemctl status redis\n# 停止服务\nsystemctl stop redis\n# python调用redis的API, 需要安装python库\npip install redis\n# 查看是否安装成功\nimport redis\n\n# redis 取出的结果默认是字节，我们可以设定 decode_responses=True 改成字符串。\nredis_conn = redis.Redis(host='127.0.0.1', port= 6379 , db= 0)\nredis_conn.set('key','Hello redis')\nprint(redis_conn.get('key')）\n```\n\n## tips\n\n### 解锁带锁的文件\n\n```bash\nsudo chmod -R 777 目录名/文件名\n```\n\n###  vim上下左右删除键失效\n\n```bash\n# 卸载原来的vim：\nsudo apt-get remove vim-common\n# 安装新的vim：\nsudo apt-get install vim\n```\n","source":"_posts/Linux-Ubuntu.md","raw":"---\ntitle: Ubuntu\ndate: 2023-11-21 16:46:07(创建时间)\ntags: Linux\ncategories: 基础知识\ndescription: 描述\ncomments: true\n---\n\n> hhhh\n\n\n查看系统版本\n\n```\ncat /etc/issue\n```\n\n****\n\n## 1. 安装Ubuntu：\n\n[https://blog.csdn.net/qq_38189484/article/details/105237757](https://blog.csdn.net/qq_38189484/article/details/105237757)\n\n[https://blog.csdn.net/qq_41349068/article/details/115456013](https://blog.csdn.net/qq_41349068/article/details/115456013)\n\n### 1.1  软件源\n\n[https://www.cnblogs.com/kennywjt/p/13035367.html](https://www.cnblogs.com/kennywjt/p/13035367.html)\n\nUbuntu 的软件源配置文件是?/etc/apt/sources.list。将系统自带的该文件做个备份，将该文件替换为下面内容，即可使用。\n\n1. 备份：\n\n```bash\nsudo cp /etc/apt/sources.list /etc/apt/sources.list.backup\n```\n2. 修改配置（见sources.list内容）：\n\n```bash\nsudo gedit /etc/apt/sources.list\n```\n\n3. 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释\n\n```bash\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\n```\n\n4. 更新源\n\n```bash\nsudo apt-get update\n```\n\n### 1.2  添加环境变量\n\n```bash\n# 查看环境变量\necho $PATH\n\n# ===临时设置环境变量，当前bash生效===\nexport PATH=路径:$PATH # 或 export PATH=$PATH:路径\n    \n# ===永久设置环境变量(1)===\nsudo gedit /etc/environment\n# 文件后面加\":路径\"并保存\nsource /etc/environment # 使其生效，仅在当前bash\n# 启动新bash不生效，重启系统后全局生效\n\n# ===永久设置环境变量(2)===\nvim /etc/profile\n# 添加\nexport JAVA_HOME=/usr/local/java/jdk1.8  #按自己的路径填\nexport PATH=$PATH:$JAVA_HOME/bin\n# 让配置文件生效\nsource /etc/profile\n# 查看版本\njava -version\n```\n\n### 1.3  创建用户授予sudo权限\n\n```bash\n# 在home路径下创建用户，创建文件夹test\nuseradd -d /home/test -m test\n# 设置密码\npasswd test\n# 命令行的模式换为bash，默认是sh\nusermod -s /bin/bash test\n# 把test用户添加到sudo和admin用户组里面\nusermod -a -G sudo test\nusermod -a -G adm test\n# 检查test所在用户组\ngroups test\n# 验证是否成功\nsudo su\n```\n\n## 2. 安装软件\n\n### 2.1  软件压缩包\n\n```bash\ntar zxf pycharm-community-2018.3.tar.gz       ##解压\n# xvf   .tar.bz2\n# -z或--gzip或--ungzip 通过gzip指令处理备份文件\n# -v或--verbose 显示指令执行过程。\n\ncd  pycharm-community-2018.3/bin\n./pycharm.sh                                 ##运行pycharm安装脚本\n```\n\n### 2.2  python+pip\n\n安装pip\n\n```bash\n# 安装默认pip  (9.0.1版本，对应python2.7)\napt install python-pip / python3-pip\n# 卸载默认pip\napt remove python-pip\n\n# 升级pip   (21.3.1版本，对应python3)\npython -m pip install --upgrade pip \n# 卸载升级的pip \npip uninstall pip\n\n# 修改python默认版本\n$ which python\n/usr/bin/python\n$ sudo rm /usr/bin/python\n$ python\n~bash: /usr/bin/python: No such file or directory\n$ ln -s /usr/bin/python3.6 /usr/bin/python\n$ python -V\nPython 3.6.9\n\n# 修改pip默认版本\n$ which pip3\n$ rm /usr/bin/pip\n$ ln -s /usr/local/bin/pip3 /usr/bin/pip\n```\n\npip安装库到对应python版本\n\n```bash\n# 环境变量加别名[可选]\necho \"alias py27='usr/bin/python2.7'\" >> ~/.bash_aliases && source ~/.bash_aliases\necho \"alias py36='usr/bin/python3.6'\" >> ~/.bash_aliases && source ~/.bash_aliases\n# 使用（安装到/usr/local/lib/python版本号/dist-packages下）\npy27 -m pip install 库\n```\n\npython更换版本保留以前库\n\n```bash\n# 保存\npip freeze > library.txt\n# ---安装python---\n# 重新安装\npip install -r library.txt\n```\n\n pip指定安装位置\n\n```bash\npip install xxx --target='路径'\n```\n\n### 2.3 Docker 安装\n\n[https://www.runoob.com/docker/ubuntu-docker-install.html](https://www.runoob.com/docker/ubuntu-docker-install.html)\n\n```bash\nsudo apt-get install docker-ce=5:20.10.16~3-0~ubuntu-bionic docker-ce-cli=5:20.10.16~3-0~ubuntu-bionic containerd.io\n```\n\n### 2.4 cmake安装\n\n```shell\napt install cmake\n```\n\n```bash\n# apt install wget\n# sudo apt-get install -y build-essential\n# sudo apt-get install libssl-dev  # 缺少openssl库 \nsudo wget https://cmake.org/files/v3.22/cmake-3.22.0-rc2-linux-x86_64.tar.gz\nsudo tar -zxvf cmake-3.22.0-rc2-linux-x86_64.tar.gz\ncd cmake-3.22.0-rc2-linux-x86_64/\n# 创建软链接\nsudo ln -sf /opt/cmake-3.22.0-rc2-linux-x86_64/bin/* /usr/bin/\ncmake --version\n```\n\n### 2.5 安装库和C++\n\n```bash\napt install build-essential\napt install gdb # 调试\nwhich gcc \n# 安装uuid\napt install uuid-dev\n# 安装gtest\ngit clone https://github.com/google/googletest.git\ncd googletest\nmkdir build && cd build && cmake .. && make -j4\nsudo make install\nsudo ldconfig\n```\n\n### 2.6 安装Clangd\n\n```shell\napt-get install clangd\nsudo apt-get install clangd-12  # clangd-9\n```\n\n使用`cmd+shift+p`输入`clangd: download`\n\n下载最新的clangd（Download language server） ，然后重启就可以使用了\n\n### 2.7 java安装\n\n```bash\nsudo apt install default-jre\njava -version\nsudo apt install default-jdk\njavac -version\n```\n\n### 2.8 Redis 安装\n\nRemote Dictionary Server，高性能key-value数据库\n\n```bash\napt-get install redis\n# 启动服务\nsystemctl start redis\n# 查看服务\nps -ef|grep 6379\n# 查看服务状态\nsystemctl status redis\n# 停止服务\nsystemctl stop redis\n# python调用redis的API, 需要安装python库\npip install redis\n# 查看是否安装成功\nimport redis\n\n# redis 取出的结果默认是字节，我们可以设定 decode_responses=True 改成字符串。\nredis_conn = redis.Redis(host='127.0.0.1', port= 6379 , db= 0)\nredis_conn.set('key','Hello redis')\nprint(redis_conn.get('key')）\n```\n\n## tips\n\n### 解锁带锁的文件\n\n```bash\nsudo chmod -R 777 目录名/文件名\n```\n\n###  vim上下左右删除键失效\n\n```bash\n# 卸载原来的vim：\nsudo apt-get remove vim-common\n# 安装新的vim：\nsudo apt-get install vim\n```\n","slug":"Linux-Ubuntu","published":1,"updated":"2023-11-21T08:02:56.358Z","layout":"post","photos":[],"link":"","_id":"clp83bfpg0001qcv43tw43kt6","content":"<blockquote>\n<p>hhhh</p>\n</blockquote>\n<p>查看系统版本</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cat &#x2F;etc&#x2F;issue<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<hr>\n<h2 id=\"1-安装Ubuntu：\"><a href=\"#1-安装Ubuntu：\" class=\"headerlink\" title=\"1. 安装Ubuntu：\"></a>1. 安装Ubuntu：</h2><p><a href=\"https://blog.csdn.net/qq_38189484/article/details/105237757\">https://blog.csdn.net/qq_38189484&#x2F;article&#x2F;details&#x2F;105237757</a></p>\n<p><a href=\"https://blog.csdn.net/qq_41349068/article/details/115456013\">https://blog.csdn.net/qq_41349068&#x2F;article&#x2F;details&#x2F;115456013</a></p>\n<h3 id=\"1-1-软件源\"><a href=\"#1-1-软件源\" class=\"headerlink\" title=\"1.1  软件源\"></a>1.1  软件源</h3><p><a href=\"https://www.cnblogs.com/kennywjt/p/13035367.html\">https://www.cnblogs.com/kennywjt/p/13035367.html</a></p>\n<p>Ubuntu 的软件源配置文件是?&#x2F;etc&#x2F;apt&#x2F;sources.list。将系统自带的该文件做个备份，将该文件替换为下面内容，即可使用。</p>\n<ol>\n<li>备份：</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> /etc/apt/sources.list /etc/apt/sources.list.backup<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ol start=\"2\">\n<li>修改配置（见sources.list内容）：</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> gedit /etc/apt/sources.list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\n<span class=\"token comment\"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span>\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\n<span class=\"token comment\"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span>\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\n<span class=\"token comment\"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span>\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\n<span class=\"token comment\"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>更新源</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"1-2-添加环境变量\"><a href=\"#1-2-添加环境变量\" class=\"headerlink\" title=\"1.2  添加环境变量\"></a>1.2  添加环境变量</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 查看环境变量</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token environment constant\">$PATH</span>\n\n<span class=\"token comment\"># ===临时设置环境变量，当前bash生效===</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span>路径:<span class=\"token environment constant\">$PATH</span> <span class=\"token comment\"># 或 export PATH=$PATH:路径</span>\n    \n<span class=\"token comment\"># ===永久设置环境变量(1)===</span>\n<span class=\"token function\">sudo</span> gedit /etc/environment\n<span class=\"token comment\"># 文件后面加\":路径\"并保存</span>\n<span class=\"token builtin class-name\">source</span> /etc/environment <span class=\"token comment\"># 使其生效，仅在当前bash</span>\n<span class=\"token comment\"># 启动新bash不生效，重启系统后全局生效</span>\n\n<span class=\"token comment\"># ===永久设置环境变量(2)===</span>\n<span class=\"token function\">vim</span> /etc/profile\n<span class=\"token comment\"># 添加</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span>/usr/local/java/jdk1.8  <span class=\"token comment\">#按自己的路径填</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">$JAVA_HOME</span>/bin\n<span class=\"token comment\"># 让配置文件生效</span>\n<span class=\"token builtin class-name\">source</span> /etc/profile\n<span class=\"token comment\"># 查看版本</span>\n<span class=\"token function\">java</span> <span class=\"token parameter variable\">-version</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-3-创建用户授予sudo权限\"><a href=\"#1-3-创建用户授予sudo权限\" class=\"headerlink\" title=\"1.3  创建用户授予sudo权限\"></a>1.3  创建用户授予sudo权限</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 在home路径下创建用户，创建文件夹test</span>\n<span class=\"token function\">useradd</span> <span class=\"token parameter variable\">-d</span> /home/test <span class=\"token parameter variable\">-m</span> <span class=\"token builtin class-name\">test</span>\n<span class=\"token comment\"># 设置密码</span>\n<span class=\"token function\">passwd</span> <span class=\"token builtin class-name\">test</span>\n<span class=\"token comment\"># 命令行的模式换为bash，默认是sh</span>\n<span class=\"token function\">usermod</span> <span class=\"token parameter variable\">-s</span> /bin/bash <span class=\"token builtin class-name\">test</span>\n<span class=\"token comment\"># 把test用户添加到sudo和admin用户组里面</span>\n<span class=\"token function\">usermod</span> <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-G</span> <span class=\"token function\">sudo</span> <span class=\"token builtin class-name\">test</span>\n<span class=\"token function\">usermod</span> <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-G</span> adm <span class=\"token builtin class-name\">test</span>\n<span class=\"token comment\"># 检查test所在用户组</span>\n<span class=\"token function\">groups</span> <span class=\"token builtin class-name\">test</span>\n<span class=\"token comment\"># 验证是否成功</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">su</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-安装软件\"><a href=\"#2-安装软件\" class=\"headerlink\" title=\"2. 安装软件\"></a>2. 安装软件</h2><h3 id=\"2-1-软件压缩包\"><a href=\"#2-1-软件压缩包\" class=\"headerlink\" title=\"2.1  软件压缩包\"></a>2.1  软件压缩包</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> zxf pycharm-community-2018.3.tar.gz       <span class=\"token comment\">##解压</span>\n<span class=\"token comment\"># xvf   .tar.bz2</span>\n<span class=\"token comment\"># -z或--gzip或--ungzip 通过gzip指令处理备份文件</span>\n<span class=\"token comment\"># -v或--verbose 显示指令执行过程。</span>\n\n<span class=\"token builtin class-name\">cd</span>  pycharm-community-2018.3/bin\n./pycharm.sh                                 <span class=\"token comment\">##运行pycharm安装脚本</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-2-python-pip\"><a href=\"#2-2-python-pip\" class=\"headerlink\" title=\"2.2  python+pip\"></a>2.2  python+pip</h3><p>安装pip</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 安装默认pip  (9.0.1版本，对应python2.7)</span>\n<span class=\"token function\">apt</span> <span class=\"token function\">install</span> python-pip / python3-pip\n<span class=\"token comment\"># 卸载默认pip</span>\n<span class=\"token function\">apt</span> remove python-pip\n\n<span class=\"token comment\"># 升级pip   (21.3.1版本，对应python3)</span>\npython <span class=\"token parameter variable\">-m</span> pip <span class=\"token function\">install</span> <span class=\"token parameter variable\">--upgrade</span> pip \n<span class=\"token comment\"># 卸载升级的pip </span>\npip uninstall pip\n\n<span class=\"token comment\"># 修改python默认版本</span>\n$ <span class=\"token function\">which</span> python\n/usr/bin/python\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> /usr/bin/python\n$ python\n~bash: /usr/bin/python: No such <span class=\"token function\">file</span> or directory\n$ <span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /usr/bin/python3.6 /usr/bin/python\n$ python <span class=\"token parameter variable\">-V</span>\nPython <span class=\"token number\">3.6</span>.9\n\n<span class=\"token comment\"># 修改pip默认版本</span>\n$ <span class=\"token function\">which</span> pip3\n$ <span class=\"token function\">rm</span> /usr/bin/pip\n$ <span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /usr/local/bin/pip3 /usr/bin/pip<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>pip安装库到对应python版本</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 环境变量加别名[可选]</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"alias py27='usr/bin/python2.7'\"</span> <span class=\"token operator\">>></span> ~/.bash_aliases <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">source</span> ~/.bash_aliases\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"alias py36='usr/bin/python3.6'\"</span> <span class=\"token operator\">>></span> ~/.bash_aliases <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">source</span> ~/.bash_aliases\n<span class=\"token comment\"># 使用（安装到/usr/local/lib/python版本号/dist-packages下）</span>\npy27 <span class=\"token parameter variable\">-m</span> pip <span class=\"token function\">install</span> 库<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>python更换版本保留以前库</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 保存</span>\npip freeze <span class=\"token operator\">></span> library.txt\n<span class=\"token comment\"># ---安装python---</span>\n<span class=\"token comment\"># 重新安装</span>\npip <span class=\"token function\">install</span> <span class=\"token parameter variable\">-r</span> library.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p> pip指定安装位置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> xxx <span class=\"token parameter variable\">--target</span><span class=\"token operator\">=</span><span class=\"token string\">'路径'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"2-3-Docker-安装\"><a href=\"#2-3-Docker-安装\" class=\"headerlink\" title=\"2.3 Docker 安装\"></a>2.3 Docker 安装</h3><p><a href=\"https://www.runoob.com/docker/ubuntu-docker-install.html\">https://www.runoob.com/docker/ubuntu-docker-install.html</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> docker-ce<span class=\"token operator\">=</span><span class=\"token number\">5</span>:20.10.16~3-0~ubuntu-bionic docker-ce-cli<span class=\"token operator\">=</span><span class=\"token number\">5</span>:20.10.16~3-0~ubuntu-bionic containerd.io<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"2-4-cmake安装\"><a href=\"#2-4-cmake安装\" class=\"headerlink\" title=\"2.4 cmake安装\"></a>2.4 cmake安装</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt</span> <span class=\"token function\">install</span> cmake<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># apt install wget</span>\n<span class=\"token comment\"># sudo apt-get install -y build-essential</span>\n<span class=\"token comment\"># sudo apt-get install libssl-dev  # 缺少openssl库 </span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> https://cmake.org/files/v3.22/cmake-3.22.0-rc2-linux-x86_64.tar.gz\n<span class=\"token function\">sudo</span> <span class=\"token function\">tar</span> <span class=\"token parameter variable\">-zxvf</span> cmake-3.22.0-rc2-linux-x86_64.tar.gz\n<span class=\"token builtin class-name\">cd</span> cmake-3.22.0-rc2-linux-x86_64/\n<span class=\"token comment\"># 创建软链接</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">ln</span> <span class=\"token parameter variable\">-sf</span> /opt/cmake-3.22.0-rc2-linux-x86_64/bin/* /usr/bin/\ncmake <span class=\"token parameter variable\">--version</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-5-安装库和C\"><a href=\"#2-5-安装库和C\" class=\"headerlink\" title=\"2.5 安装库和C++\"></a>2.5 安装库和C++</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt</span> <span class=\"token function\">install</span> build-essential\n<span class=\"token function\">apt</span> <span class=\"token function\">install</span> gdb <span class=\"token comment\"># 调试</span>\n<span class=\"token function\">which</span> gcc \n<span class=\"token comment\"># 安装uuid</span>\n<span class=\"token function\">apt</span> <span class=\"token function\">install</span> uuid-dev\n<span class=\"token comment\"># 安装gtest</span>\n<span class=\"token function\">git</span> clone https://github.com/google/googletest.git\n<span class=\"token builtin class-name\">cd</span> googletest\n<span class=\"token function\">mkdir</span> build <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> build <span class=\"token operator\">&amp;&amp;</span> cmake <span class=\"token punctuation\">..</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">make</span> <span class=\"token parameter variable\">-j4</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span>\n<span class=\"token function\">sudo</span> ldconfig<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-6-安装Clangd\"><a href=\"#2-6-安装Clangd\" class=\"headerlink\" title=\"2.6 安装Clangd\"></a>2.6 安装Clangd</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> clangd\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> clangd-12  <span class=\"token comment\"># clangd-9</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>使用<code>cmd+shift+p</code>输入<code>clangd: download</code></p>\n<p>下载最新的clangd（Download language server） ，然后重启就可以使用了</p>\n<h3 id=\"2-7-java安装\"><a href=\"#2-7-java安装\" class=\"headerlink\" title=\"2.7 java安装\"></a>2.7 java安装</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> default-jre\n<span class=\"token function\">java</span> <span class=\"token parameter variable\">-version</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> default-jdk\njavac <span class=\"token parameter variable\">-version</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-8-Redis-安装\"><a href=\"#2-8-Redis-安装\" class=\"headerlink\" title=\"2.8 Redis 安装\"></a>2.8 Redis 安装</h3><p>Remote Dictionary Server，高性能key-value数据库</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> redis\n<span class=\"token comment\"># 启动服务</span>\nsystemctl start redis\n<span class=\"token comment\"># 查看服务</span>\n<span class=\"token function\">ps</span> -ef<span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token number\">6379</span>\n<span class=\"token comment\"># 查看服务状态</span>\nsystemctl status redis\n<span class=\"token comment\"># 停止服务</span>\nsystemctl stop redis\n<span class=\"token comment\"># python调用redis的API, 需要安装python库</span>\npip <span class=\"token function\">install</span> redis\n<span class=\"token comment\"># 查看是否安装成功</span>\n<span class=\"token function\">import</span> redis\n\n<span class=\"token comment\"># redis 取出的结果默认是字节，我们可以设定 decode_responses=True 改成字符串。</span>\nredis_conn <span class=\"token operator\">=</span> redis.Redis<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'127.0.0.1'</span>, <span class=\"token assign-left variable\">port</span><span class=\"token operator\">=</span> <span class=\"token number\">6379</span> , <span class=\"token assign-left variable\">db</span><span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nredis_conn.set<span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span>,<span class=\"token string\">'Hello redis'</span><span class=\"token punctuation\">)</span>\nprint<span class=\"token punctuation\">(</span>redis_conn.get<span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">)</span>）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"tips\"><a href=\"#tips\" class=\"headerlink\" title=\"tips\"></a>tips</h2><h3 id=\"解锁带锁的文件\"><a href=\"#解锁带锁的文件\" class=\"headerlink\" title=\"解锁带锁的文件\"></a>解锁带锁的文件</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> <span class=\"token parameter variable\">-R</span> <span class=\"token number\">777</span> 目录名/文件名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"vim上下左右删除键失效\"><a href=\"#vim上下左右删除键失效\" class=\"headerlink\" title=\"vim上下左右删除键失效\"></a>vim上下左右删除键失效</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 卸载原来的vim：</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> remove vim-common\n<span class=\"token comment\"># 安装新的vim：</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token function\">vim</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>hhhh</p>\n</blockquote>\n<p>查看系统版本</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cat &#x2F;etc&#x2F;issue<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<hr>\n<h2 id=\"1-安装Ubuntu：\"><a href=\"#1-安装Ubuntu：\" class=\"headerlink\" title=\"1. 安装Ubuntu：\"></a>1. 安装Ubuntu：</h2><p><a href=\"https://blog.csdn.net/qq_38189484/article/details/105237757\">https://blog.csdn.net/qq_38189484&#x2F;article&#x2F;details&#x2F;105237757</a></p>\n<p><a href=\"https://blog.csdn.net/qq_41349068/article/details/115456013\">https://blog.csdn.net/qq_41349068&#x2F;article&#x2F;details&#x2F;115456013</a></p>\n<h3 id=\"1-1-软件源\"><a href=\"#1-1-软件源\" class=\"headerlink\" title=\"1.1  软件源\"></a>1.1  软件源</h3><p><a href=\"https://www.cnblogs.com/kennywjt/p/13035367.html\">https://www.cnblogs.com/kennywjt/p/13035367.html</a></p>\n<p>Ubuntu 的软件源配置文件是?&#x2F;etc&#x2F;apt&#x2F;sources.list。将系统自带的该文件做个备份，将该文件替换为下面内容，即可使用。</p>\n<ol>\n<li>备份：</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> /etc/apt/sources.list /etc/apt/sources.list.backup<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ol start=\"2\">\n<li>修改配置（见sources.list内容）：</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> gedit /etc/apt/sources.list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\n<span class=\"token comment\"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span>\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\n<span class=\"token comment\"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span>\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\n<span class=\"token comment\"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span>\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\n<span class=\"token comment\"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>更新源</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"1-2-添加环境变量\"><a href=\"#1-2-添加环境变量\" class=\"headerlink\" title=\"1.2  添加环境变量\"></a>1.2  添加环境变量</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 查看环境变量</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token environment constant\">$PATH</span>\n\n<span class=\"token comment\"># ===临时设置环境变量，当前bash生效===</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span>路径:<span class=\"token environment constant\">$PATH</span> <span class=\"token comment\"># 或 export PATH=$PATH:路径</span>\n    \n<span class=\"token comment\"># ===永久设置环境变量(1)===</span>\n<span class=\"token function\">sudo</span> gedit /etc/environment\n<span class=\"token comment\"># 文件后面加\":路径\"并保存</span>\n<span class=\"token builtin class-name\">source</span> /etc/environment <span class=\"token comment\"># 使其生效，仅在当前bash</span>\n<span class=\"token comment\"># 启动新bash不生效，重启系统后全局生效</span>\n\n<span class=\"token comment\"># ===永久设置环境变量(2)===</span>\n<span class=\"token function\">vim</span> /etc/profile\n<span class=\"token comment\"># 添加</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span>/usr/local/java/jdk1.8  <span class=\"token comment\">#按自己的路径填</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">$JAVA_HOME</span>/bin\n<span class=\"token comment\"># 让配置文件生效</span>\n<span class=\"token builtin class-name\">source</span> /etc/profile\n<span class=\"token comment\"># 查看版本</span>\n<span class=\"token function\">java</span> <span class=\"token parameter variable\">-version</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"1-3-创建用户授予sudo权限\"><a href=\"#1-3-创建用户授予sudo权限\" class=\"headerlink\" title=\"1.3  创建用户授予sudo权限\"></a>1.3  创建用户授予sudo权限</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 在home路径下创建用户，创建文件夹test</span>\n<span class=\"token function\">useradd</span> <span class=\"token parameter variable\">-d</span> /home/test <span class=\"token parameter variable\">-m</span> <span class=\"token builtin class-name\">test</span>\n<span class=\"token comment\"># 设置密码</span>\n<span class=\"token function\">passwd</span> <span class=\"token builtin class-name\">test</span>\n<span class=\"token comment\"># 命令行的模式换为bash，默认是sh</span>\n<span class=\"token function\">usermod</span> <span class=\"token parameter variable\">-s</span> /bin/bash <span class=\"token builtin class-name\">test</span>\n<span class=\"token comment\"># 把test用户添加到sudo和admin用户组里面</span>\n<span class=\"token function\">usermod</span> <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-G</span> <span class=\"token function\">sudo</span> <span class=\"token builtin class-name\">test</span>\n<span class=\"token function\">usermod</span> <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-G</span> adm <span class=\"token builtin class-name\">test</span>\n<span class=\"token comment\"># 检查test所在用户组</span>\n<span class=\"token function\">groups</span> <span class=\"token builtin class-name\">test</span>\n<span class=\"token comment\"># 验证是否成功</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">su</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-安装软件\"><a href=\"#2-安装软件\" class=\"headerlink\" title=\"2. 安装软件\"></a>2. 安装软件</h2><h3 id=\"2-1-软件压缩包\"><a href=\"#2-1-软件压缩包\" class=\"headerlink\" title=\"2.1  软件压缩包\"></a>2.1  软件压缩包</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> zxf pycharm-community-2018.3.tar.gz       <span class=\"token comment\">##解压</span>\n<span class=\"token comment\"># xvf   .tar.bz2</span>\n<span class=\"token comment\"># -z或--gzip或--ungzip 通过gzip指令处理备份文件</span>\n<span class=\"token comment\"># -v或--verbose 显示指令执行过程。</span>\n\n<span class=\"token builtin class-name\">cd</span>  pycharm-community-2018.3/bin\n./pycharm.sh                                 <span class=\"token comment\">##运行pycharm安装脚本</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-2-python-pip\"><a href=\"#2-2-python-pip\" class=\"headerlink\" title=\"2.2  python+pip\"></a>2.2  python+pip</h3><p>安装pip</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 安装默认pip  (9.0.1版本，对应python2.7)</span>\n<span class=\"token function\">apt</span> <span class=\"token function\">install</span> python-pip / python3-pip\n<span class=\"token comment\"># 卸载默认pip</span>\n<span class=\"token function\">apt</span> remove python-pip\n\n<span class=\"token comment\"># 升级pip   (21.3.1版本，对应python3)</span>\npython <span class=\"token parameter variable\">-m</span> pip <span class=\"token function\">install</span> <span class=\"token parameter variable\">--upgrade</span> pip \n<span class=\"token comment\"># 卸载升级的pip </span>\npip uninstall pip\n\n<span class=\"token comment\"># 修改python默认版本</span>\n$ <span class=\"token function\">which</span> python\n/usr/bin/python\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> /usr/bin/python\n$ python\n~bash: /usr/bin/python: No such <span class=\"token function\">file</span> or directory\n$ <span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /usr/bin/python3.6 /usr/bin/python\n$ python <span class=\"token parameter variable\">-V</span>\nPython <span class=\"token number\">3.6</span>.9\n\n<span class=\"token comment\"># 修改pip默认版本</span>\n$ <span class=\"token function\">which</span> pip3\n$ <span class=\"token function\">rm</span> /usr/bin/pip\n$ <span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /usr/local/bin/pip3 /usr/bin/pip<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>pip安装库到对应python版本</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 环境变量加别名[可选]</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"alias py27='usr/bin/python2.7'\"</span> <span class=\"token operator\">>></span> ~/.bash_aliases <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">source</span> ~/.bash_aliases\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"alias py36='usr/bin/python3.6'\"</span> <span class=\"token operator\">>></span> ~/.bash_aliases <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">source</span> ~/.bash_aliases\n<span class=\"token comment\"># 使用（安装到/usr/local/lib/python版本号/dist-packages下）</span>\npy27 <span class=\"token parameter variable\">-m</span> pip <span class=\"token function\">install</span> 库<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>python更换版本保留以前库</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 保存</span>\npip freeze <span class=\"token operator\">></span> library.txt\n<span class=\"token comment\"># ---安装python---</span>\n<span class=\"token comment\"># 重新安装</span>\npip <span class=\"token function\">install</span> <span class=\"token parameter variable\">-r</span> library.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p> pip指定安装位置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> xxx <span class=\"token parameter variable\">--target</span><span class=\"token operator\">=</span><span class=\"token string\">'路径'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"2-3-Docker-安装\"><a href=\"#2-3-Docker-安装\" class=\"headerlink\" title=\"2.3 Docker 安装\"></a>2.3 Docker 安装</h3><p><a href=\"https://www.runoob.com/docker/ubuntu-docker-install.html\">https://www.runoob.com/docker/ubuntu-docker-install.html</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> docker-ce<span class=\"token operator\">=</span><span class=\"token number\">5</span>:20.10.16~3-0~ubuntu-bionic docker-ce-cli<span class=\"token operator\">=</span><span class=\"token number\">5</span>:20.10.16~3-0~ubuntu-bionic containerd.io<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"2-4-cmake安装\"><a href=\"#2-4-cmake安装\" class=\"headerlink\" title=\"2.4 cmake安装\"></a>2.4 cmake安装</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt</span> <span class=\"token function\">install</span> cmake<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># apt install wget</span>\n<span class=\"token comment\"># sudo apt-get install -y build-essential</span>\n<span class=\"token comment\"># sudo apt-get install libssl-dev  # 缺少openssl库 </span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> https://cmake.org/files/v3.22/cmake-3.22.0-rc2-linux-x86_64.tar.gz\n<span class=\"token function\">sudo</span> <span class=\"token function\">tar</span> <span class=\"token parameter variable\">-zxvf</span> cmake-3.22.0-rc2-linux-x86_64.tar.gz\n<span class=\"token builtin class-name\">cd</span> cmake-3.22.0-rc2-linux-x86_64/\n<span class=\"token comment\"># 创建软链接</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">ln</span> <span class=\"token parameter variable\">-sf</span> /opt/cmake-3.22.0-rc2-linux-x86_64/bin/* /usr/bin/\ncmake <span class=\"token parameter variable\">--version</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-5-安装库和C\"><a href=\"#2-5-安装库和C\" class=\"headerlink\" title=\"2.5 安装库和C++\"></a>2.5 安装库和C++</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt</span> <span class=\"token function\">install</span> build-essential\n<span class=\"token function\">apt</span> <span class=\"token function\">install</span> gdb <span class=\"token comment\"># 调试</span>\n<span class=\"token function\">which</span> gcc \n<span class=\"token comment\"># 安装uuid</span>\n<span class=\"token function\">apt</span> <span class=\"token function\">install</span> uuid-dev\n<span class=\"token comment\"># 安装gtest</span>\n<span class=\"token function\">git</span> clone https://github.com/google/googletest.git\n<span class=\"token builtin class-name\">cd</span> googletest\n<span class=\"token function\">mkdir</span> build <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> build <span class=\"token operator\">&amp;&amp;</span> cmake <span class=\"token punctuation\">..</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">make</span> <span class=\"token parameter variable\">-j4</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span>\n<span class=\"token function\">sudo</span> ldconfig<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-6-安装Clangd\"><a href=\"#2-6-安装Clangd\" class=\"headerlink\" title=\"2.6 安装Clangd\"></a>2.6 安装Clangd</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> clangd\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> clangd-12  <span class=\"token comment\"># clangd-9</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>使用<code>cmd+shift+p</code>输入<code>clangd: download</code></p>\n<p>下载最新的clangd（Download language server） ，然后重启就可以使用了</p>\n<h3 id=\"2-7-java安装\"><a href=\"#2-7-java安装\" class=\"headerlink\" title=\"2.7 java安装\"></a>2.7 java安装</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> default-jre\n<span class=\"token function\">java</span> <span class=\"token parameter variable\">-version</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> default-jdk\njavac <span class=\"token parameter variable\">-version</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-8-Redis-安装\"><a href=\"#2-8-Redis-安装\" class=\"headerlink\" title=\"2.8 Redis 安装\"></a>2.8 Redis 安装</h3><p>Remote Dictionary Server，高性能key-value数据库</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> redis\n<span class=\"token comment\"># 启动服务</span>\nsystemctl start redis\n<span class=\"token comment\"># 查看服务</span>\n<span class=\"token function\">ps</span> -ef<span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token number\">6379</span>\n<span class=\"token comment\"># 查看服务状态</span>\nsystemctl status redis\n<span class=\"token comment\"># 停止服务</span>\nsystemctl stop redis\n<span class=\"token comment\"># python调用redis的API, 需要安装python库</span>\npip <span class=\"token function\">install</span> redis\n<span class=\"token comment\"># 查看是否安装成功</span>\n<span class=\"token function\">import</span> redis\n\n<span class=\"token comment\"># redis 取出的结果默认是字节，我们可以设定 decode_responses=True 改成字符串。</span>\nredis_conn <span class=\"token operator\">=</span> redis.Redis<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'127.0.0.1'</span>, <span class=\"token assign-left variable\">port</span><span class=\"token operator\">=</span> <span class=\"token number\">6379</span> , <span class=\"token assign-left variable\">db</span><span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nredis_conn.set<span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span>,<span class=\"token string\">'Hello redis'</span><span class=\"token punctuation\">)</span>\nprint<span class=\"token punctuation\">(</span>redis_conn.get<span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">)</span>）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"tips\"><a href=\"#tips\" class=\"headerlink\" title=\"tips\"></a>tips</h2><h3 id=\"解锁带锁的文件\"><a href=\"#解锁带锁的文件\" class=\"headerlink\" title=\"解锁带锁的文件\"></a>解锁带锁的文件</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> <span class=\"token parameter variable\">-R</span> <span class=\"token number\">777</span> 目录名/文件名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"vim上下左右删除键失效\"><a href=\"#vim上下左右删除键失效\" class=\"headerlink\" title=\"vim上下左右删除键失效\"></a>vim上下左右删除键失效</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 卸载原来的vim：</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> remove vim-common\n<span class=\"token comment\"># 安装新的vim：</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token function\">vim</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clp83bfpg0001qcv43tw43kt6","category_id":"clp83bfpj0002qcv43vdxejm4","_id":"clp83bfpm0005qcv430bm4lzf"}],"PostTag":[{"post_id":"clp83bfpg0001qcv43tw43kt6","tag_id":"clp83bfpk0003qcv479r74pv0","_id":"clp83bfpm0004qcv4d9sue8dk"}],"Tag":[{"name":"Linux","_id":"clp83bfpk0003qcv479r74pv0"}]}}